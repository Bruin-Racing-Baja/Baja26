/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_OPERATION_HEADER_PB_H_INCLUDED
#define PB_OPERATION_HEADER_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _OperationHeader {
    uint32_t timestamp;
    uint32_t clock_us;
    float controller_kp;
    float controller_kd;
    float target_rpm;
    float wheel_ref_low_rpm;
    float wheel_ref_high_rpm;
    float wheel_ref_breakpoint_low_mph;
    float wheel_ref_breakpoint_high_mph;
} OperationHeader;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define OperationHeader_init_default             {0, 0, 0, 0, 0, 0, 0, 0, 0}
#define OperationHeader_init_zero                {0, 0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define OperationHeader_timestamp_tag            1
#define OperationHeader_clock_us_tag             2
#define OperationHeader_controller_kp_tag        3
#define OperationHeader_controller_kd_tag        4
#define OperationHeader_target_rpm_tag           5
#define OperationHeader_wheel_ref_low_rpm_tag    6
#define OperationHeader_wheel_ref_high_rpm_tag   7
#define OperationHeader_wheel_ref_breakpoint_low_mph_tag 8
#define OperationHeader_wheel_ref_breakpoint_high_mph_tag 9

/* Struct field encoding specification for nanopb */
#define OperationHeader_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   timestamp,         1) \
X(a, STATIC,   SINGULAR, UINT32,   clock_us,          2) \
X(a, STATIC,   SINGULAR, FLOAT,    controller_kp,     3) \
X(a, STATIC,   SINGULAR, FLOAT,    controller_kd,     4) \
X(a, STATIC,   SINGULAR, FLOAT,    target_rpm,        5) \
X(a, STATIC,   SINGULAR, FLOAT,    wheel_ref_low_rpm,   6) \
X(a, STATIC,   SINGULAR, FLOAT,    wheel_ref_high_rpm,   7) \
X(a, STATIC,   SINGULAR, FLOAT,    wheel_ref_breakpoint_low_mph,   8) \
X(a, STATIC,   SINGULAR, FLOAT,    wheel_ref_breakpoint_high_mph,   9)
#define OperationHeader_CALLBACK NULL
#define OperationHeader_DEFAULT NULL

extern const pb_msgdesc_t OperationHeader_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define OperationHeader_fields &OperationHeader_msg

/* Maximum encoded size of messages (where known) */
#define OPERATION_HEADER_PB_H_MAX_SIZE           OperationHeader_size
#define OperationHeader_size                     47

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
